group 'phenomics-notification'
version '1.0'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}



apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    compile(
            'org.springframework:spring-context-support:3.2.0.RELEASE',
            "javax.mail:mail:1.4.1",
            'net.sf.jmimemagic:jmimemagic:0.1.5',
            'commons-collections:commons-collections:3.2.1',
            'org.apache.commons:commons-lang3:3.0',
            'com.googlecode.json-simple:json-simple:1.1.1',
            'org.projectlombok:lombok:1.16.14',
            "org.springframework.boot:spring-boot-starter-jetty",
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-actuator",
            'org.springframework.boot:spring-boot-starter-mail:1.5.9.RELEASE',
            "io.springfox:springfox-swagger2:2.5.0",
            'io.springfox:springfox-swagger-ui:2.5.0',
            'mysql:mysql-connector-java:8.0.11'
    )

    testCompile 'junit:junit:4.12'
}

bootRun {
    systemProperties System.properties

}

task buildDocker(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'phenomics-notification'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom',  '-Dspring.profiles.active=dev', '-jar', '/app.jar' ])
    exposePort(9090)
}

task buildDockerProd(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'phenomics-notification-prod'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom',  '-Dspring.profiles.active=prod', '-jar', '/app.jar' ])
    exposePort(9090)
}

task buildDockerDev(type: Docker) {
    baseImage = 'develar/java:latest'
    push = project.hasProperty('push')
    tag = 'phenomics-notification-dev'
    addFile {
        from jar
        rename {'app.jar'}
    }
    entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom',  '-Dspring.profiles.active=dev', '-jar', '/app.jar' ])
    exposePort(9090)
}

buildDocker.dependsOn(build)


